{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","text1","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","word","alert","charAt","slice","msg","defaultProps","App","setMode","setalert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b33766e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n        {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'dark' ? 'Light' :  'Dark'} Mode</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.propTypes ={\r\n  title : PropTypes.string.isRequired,\r\n  aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    aboutText : 'About text here'\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState(\"\");\r\n    const UpperCsClick = ()=>{\r\n       \r\n        let text1 = text.toUpperCase();\r\n        setText(text1);\r\n        props.showalert(\"Converted to UpperCase\",\"success\");\r\n    };\r\n    const LowerCsClick = ()=>{\r\n       \r\n        let text1 = text.toLowerCase();\r\n        setText(text1);\r\n        props.showalert(\"Converted to LowerCase\",\"success\");\r\n        \r\n    };\r\n    const ClearClick = ()=>{\r\n       \r\n        // let text1 = text.toLowerCase();\r\n        setText('');\r\n        props.showalert(\"Cleared Text\",\"success\");\r\n        \r\n    };\r\n    const CopyText = ()=>{\r\n       \r\n       let text = document.getElementById(\"myBox\")\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showalert(\"Copied Text to ClipBoard\",\"success\");\r\n        \r\n    };\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    };\r\nreturn (\r\n    <>\r\n        <div className = \"container\" style={{ color : props.mode === 'dark' ? 'white' : '#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor : props.mode === 'dark' ? 'grey' : 'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={UpperCsClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={LowerCsClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={ClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={CopyText}>Copy Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{ color : props.mode === 'light' ? '#042743' : 'white'}}>\r\n        <h2> Your Text Summary</h2>\r\n        <p> {text.split(' ').length} words and {text.length} characters</p>\r\n        <p> {0.008 * text.split(' ').length} minutes required to read the above entered text</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0 ? text : \"Enter Something in the TextBox above to Preview it here\"}</p>\r\n        </div>\r\n        </>\r\n)\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const to_Capital = (word)=>\r\n    {\r\n       \r\n        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase(); \r\n    }\r\n    return (\r\n       \r\n      props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{to_Capital(props.alert.type)}</strong> : {props.alert.msg}\r\n         \r\n            </div>\r\n        \r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message,type)=>\n  {\n    setalert({\n      msg : message,\n      type : type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  const toggleMode = ()=>\n  {                       // to change the current set mode \n    if(mode === 'dark')\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n    }\n    \n    else{\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark Mode has been Enabled\",\"success\");\n    }\n  }\n  return (\n   <>\n    {/* <Router> */}\n   <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode} aboutText = \"About TextUtils\"/>\n   \n   <strong><Alert alert={alert} /> </strong>\n   <div className=\"container my-3\">\n          \n          {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text to analyze\" mode={mode} showalert={showAlert}/>\n          {/* </Route>\n        </Switch> */}\n       </div>\n   {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}